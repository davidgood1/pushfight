package require tcltest
namespace import ::tcltest::*

source ../pushfight.tcl

set DefaultPieces [list C3 C4 A4 B4 D4 A5 D5 B6 B5 C5 -]

test move_returns_newPiecesList_when_moveIsValid {
} -body {
    pushfight::move C3 B3 $DefaultPieces
} -result {B3 C4 A4 B4 D4 A5 D5 B6 B5 C5 -}

# Test the from location errors
test move_returns_errorLocation_when_movingOffOfTheBoard {
} -body {
    pushfight::move A4 A2 $DefaultPieces
} -returnCodes error -result "location 'A2' is not on the board"

test move_returns_samePiecesList_when_toAndFromAreIdentical {
} -body {
    pushfight::move A4 A4 $DefaultPieces
} -result {C3 C4 A4 B4 D4 A5 D5 B6 B5 C5 -}

test move_returns_errorNoPiece_whenNoPieceAtFromLocation {
} -body {
    pushfight::move A3 B3 $DefaultPieces
} -returnCodes error -result "no piece at location 'A3'"

test move_returns_errorNoPiece_when_bothToAndFromAreInvalid {
} -body {
    pushfight::move A3 A2 $DefaultPieces
} -returnCodes error -result "no piece at location 'A3'"

test move_returns_errorNoPiece_when_fromLocationNotOnBoard {
} -body {
    pushfight::move A3 A2 $DefaultPieces
} -returnCodes error -result "no piece at location 'A3'"

test move_returns_error_when_pieceIsNotOnBoard {
} -body {
    pushfight::move D1 C1 [list D1 C4 A4 B4 D4 A5 D5 B6 B5 C5 -]
} -returnCodes error -result "piece is not on the board"

test move_returns_error_when_pieceIsAnchored {
} -body {
    pushfight::move C3 D3 [list C3 C4 A4 B4 D4 A5 D5 B6 B5 C5 C3]
} -returnCodes error -result "piece is anchored"

# Test to location errors
test move_returns_errorNotEmpty_when_movingOntoAnotherPiece {
} -body {
    pushfight::move C3 C4 $DefaultPieces
} -returnCodes error -result "location 'C4' is not empty"

test move_returns_errorPath_when_noPathToLocation {
} -body {
    pushfight::move C3 B7 $DefaultPieces
} -returnCodes error -result "no path to location 'B7'"
