package require tcltest
namespace import ::tcltest::*

source ../pushfight.tcl

# Test Board
#      __________
# ____| | | |B| |__
# | |W| |w| | |b| |
# | | |W|W|b|*| | |
# --| | |w|B| |----
#   -----------
# Where W = White Square, w = White round
#       B = Brown Square, b = Brown round
#       * = Anchor on Brown Square
set TestPieces [list B2 C3 C4 B4 D4 D5 A6 C6 C5 B7 C6]

# Test the errors
test push_returns_error_when_notEnoughPieces {
} -body {
    pushfight::push C3 B3 [lrange $TestPieces 0 end-1]
} -returnCodes error -result "wrong number of pieces: should be 11 but got 10"

test push_returns_error_when_tooManyPieces {
} -body {
    pushfight::push C3 B3 [list B2 C3 C4 B4 D4 D5 A6 C6 C5 B7 D5 C8]
} -returnCodes error -result "wrong number of pieces: should be 11 but got 12"

test push_returns_error_when_noPieceAtFromLocation {
} -body {
    pushfight::push B5 B4 $TestPieces
} -returnCodes error -result "no piece at location 'B5'"

test push_returns_error_when_pieceIsNotSquare {
} -body {
    pushfight::push C5 C4 $TestPieces
} -returnCodes error -result "piece at location 'C5' can not push"

test push_returns_error_when_noPieceAtLocationTo {
} -body {
    pushfight::push C3 B3 $TestPieces
} -returnCodes error -result "not a valid push to location 'B3'"

test push_returns_error_when_pieceIsAnchored {
} -body {
    pushfight::push C6 C5 $TestPieces
} -returnCodes error -result "piece is anchored"

test push_returns_error_when_pushIsBlockedByAnchor {
} -body {
    pushfight::push C4 C5 $TestPieces
} -returnCodes error -result "not a valid push to location 'C5'"

test push_returns_error_when_pushIsBlockedByRail {
} -body {
    pushfight::push C4 D4 $TestPieces
} -returnCodes error -result "not a valid push to location 'D4'"

test push_returns_correctBoard_when_pushIsValid_and_allPiecesOnBoard {
} -body {
    pushfight::push C4 B4 $TestPieces
} -result {B2 C3 B4 A4 D4 D5 A6 C6 C5 B7 B4}

test push_returns_correctBoard_when_pushIsValid_and_pieceIsPushedOffBoard {
} -body {
    pushfight::push B7 B8 [list C3 C4 B7 B4 D4 D5 A6 C6 C5 B8 D5]
} -result {C3 C4 B8 B4 D4 D5 A6 C6 C5 B9 B8}

test push_returns_correctBoard_when_pushIsValid_and_manyPiecesBumped {
} -body {
    pushfight::push C6 C5 [list C3 C4 B7 B4 D4 D5 A6 C6 C5 B8 D5]
} -result {C2 C3 B7 B4 D4 D5 A6 C5 C4 B8 C5}


cleanupTests
